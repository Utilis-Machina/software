# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Microstrain library

env:
  LIBRARY_DIR: Microstrain

# Unfortunately, the variable from the environment is not available to use in the "on" portion.
on:
  push:
    branches: [ "main" ]
    paths:
      - Microstrain/**
  pull_request:
    branches: [ "main" ]
    paths:
      - Microstrain/**
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pyserial pytest pytest-mock pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test ${{env.LIBRARY_DIR}} with pytest
      run: |
        pytest ${{env.LIBRARY_DIR}}/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=power_check --cov-report=html --disable-pytest-warnings
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: ${{ github.workspace }}/junit/test-results-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
    - name: Upload pytest coverage results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-coverage-report
        path: ${{ github.workspace }}/htmlcov/*.*
